#include <bits/stdc++.h>
using namespace std;

void dfsIterative(int start, vector<vector<int>> &adj, int vertices) {
    vector<bool> visited(vertices, false);
    stack<int> s;
    s.push(start);

    while (!s.empty()) {
        int node = s.top();
        s.pop();

        if (!visited[node]) {
            cout << node << " ";
            visited[node] = true;
        }

        for (auto it = adj[node].rbegin(); it != adj[node].rend(); ++it) {
            if (!visited[*it]) {
                s.push(*it);
            }
        }
    }
}

int main() {
    int vertices = 5;
    vector<vector<int>> adj(vertices);
    
    adj[0] = {1, 2};
    adj[1] = {0, 3, 4};
    adj[2] = {0};
    adj[3] = {1};
    adj[4] = {1};

    cout << "DFS Traversal (Iterative): ";
    dfsIterative(0, adj, vertices);

    return 0;
}
